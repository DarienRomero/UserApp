{"version":3,"sources":["UserRow.js","http-provider.js","AddUser.js","GList.js","Home.js","Login.js","UserDetails/UserDetail.js","App.jsx","index.js"],"names":["UserRow","id","email","onItemSelected","IconButton","aria-label","onClick","e","ArrowForwardIos","baseURL","getUserEndpoint","login","password","a","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","resp","console","log","text","status","getUser","filterName","parse","usuarios","editUser","user","uid","altura","nombres","photoUrl","getUserById","usuario","createUser","useStyles","makeStyles","theme","newButton","position","right","AddUser","onAdd","React","useState","open","setOpen","setEmail","setPassword","classes","handleClose","handleCreateNewUser","length","Button","variant","startIcon","Add","className","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","onChange","target","value","margin","label","type","fullWidth","DialogActions","color","GList","timer","searchValue","setSearchValue","usersList","setUsersList","history","useHistory","loadUsers","users","useEffect","fetchData","handleOnChange","clearTimeout","setTimeout","userId","push","map","Home","column","display","flexDirection","textField","paddingBottom","title","textAlign","fontWeight","fieldTitle","fontFamily","button","height","cardStyle","paddingTop","Login","checked","setChecked","emailError","setEmailError","passwordError","setPasswordError","handleOnPressed","includes","token","replace","alert","Container","maxWidth","Card","CardContent","Typography","noValidate","autoComplete","error","FormControlLabel","control","Checkbox","name","root","flexGrow","paddingLeft","UserDetail","props","location","state","userData","setUserData","Date","selectedDate","setSelectedDate","editUserData","Grid","container","spacing","justify","alignItems","item","xs","utils","DateFnsUtils","lang","format","date","KeyboardButtonProps","App","basename","window","pathname","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d95fd10.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ArrowForwardIos } from '@material-ui/icons';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nconst UserRow = ({id, email, onItemSelected}) => (\r\n    <tr key={id}>\r\n        <td>{id}</td>\r\n        <td>{email}</td>\r\n        <td>\r\n            <IconButton \r\n                aria-label=\"delete\"\r\n                onClick = {(e)=>{\r\n                    onItemSelected(id)\r\n                }}\r\n            >\r\n                \r\n                <ArrowForwardIos />\r\n            </IconButton>\r\n        </td>\r\n    </tr> \r\n)\r\n\r\nexport default UserRow;","const baseURL = \"https://evolbit-api.herokuapp.com/\";\r\nconst loginEndpoint = \"api/auth/login\";\r\nconst getUserEndpoint = \"api/usuarios\";\r\nconst editUserEndpoint = \"api/usuarios/edit\";\r\nconst getUserByIdEndpoint = \"api/usuarios/detail\";\r\n\r\nexport const login = async (email, password) => {\r\n    try{\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        \r\n        var raw = JSON.stringify({\r\n            \"email\": email,\r\n            \"password\": password\r\n        });\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n    \r\n        const resp = await fetch(baseURL + loginEndpoint, requestOptions);\r\n        console.log(resp);\r\n        const body = await resp.text();\r\n        console.log(body);\r\n        if(resp.status === 200){\r\n            return body;\r\n        }else{\r\n            return null;\r\n        }\r\n    }catch(e){\r\n        return null;\r\n    }\r\n    \r\n}\r\nexport const getUser = async(filterName = \"\") => {\r\n    try{\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n          };\r\n        \r\n          const resp = await fetch(baseURL + getUserEndpoint + \"/\" + filterName , requestOptions);\r\n          const text = await resp.text();\r\n          const {usuarios} = JSON.parse(text);\r\n          return usuarios;\r\n    }catch(e){\r\n        return [];\r\n    }\r\n}\r\nexport const editUser = async(user, uid) => {\r\n    try{\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        var raw = JSON.stringify({\r\n            \"id\": uid,\r\n            \"altura\": user.altura,\r\n            \"nombres\": user.nombres,\r\n            \"photoUrl\": user.photoUrl\r\n        });\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n        const resp = await fetch(baseURL + editUserEndpoint, requestOptions);\r\n\r\n        console.log(resp.status);\r\n        \r\n        if(resp.status === 200 ){\r\n            return true;\r\n        }\r\n        return false;\r\n    }catch(e){\r\n        console.log(e);\r\n        return false;\r\n    }\r\n}\r\nexport const getUserById = async(id) => {\r\n    try{\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n          };\r\n        \r\n          const resp = await fetch(baseURL + getUserByIdEndpoint + \"/\" + id , requestOptions);\r\n          const text = await resp.text();\r\n          const usuario = JSON.parse(text);\r\n          return usuario;\r\n    }catch(e){\r\n        return [];\r\n    }\r\n}\r\nexport const createUser = async (email, password) => {\r\n    try{\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        \r\n        var raw = JSON.stringify({\r\n            \"email\": email,\r\n            \"password\": password\r\n        });\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n    \r\n        const resp = await fetch(baseURL + getUserEndpoint, requestOptions);\r\n        const body = await resp.text();\r\n        const usuario = JSON.parse(body);\r\n        if(resp.status === 200){\r\n            return usuario;\r\n        }else{\r\n            return null;\r\n        }\r\n    }catch(e){\r\n        return null;\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport { Add } from '@material-ui/icons';\r\nimport {Button, makeStyles, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\r\nimport {createUser} from './http-provider';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    }\r\n}));\r\n\r\nconst AddUser = ({onAdd}) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const classes = useStyles();\r\n    \r\n    \r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleCreateNewUser = async() => {\r\n\r\n        const usuario = await createUser(email, password);\r\n        if(email.length == 0) return;\r\n        if(password.length == 0) return;\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setOpen(false);\r\n        onAdd(usuario.email);\r\n    };\r\n    \r\n    return (\r\n        <>\r\n        <Button\r\n            text = \"Add New\"\r\n            variant = \"outlined\"\r\n            startIcon = {<Add/>}\r\n            className = {classes.newButton}\r\n            onClick = {handleClickOpen}\r\n        />\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Crear nuevo usuario</DialogTitle>\r\n            <DialogContent>\r\n                <TextField\r\n                    autoFocus\r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                    margin=\"dense\"\r\n                    id=\"email\"\r\n                    value = {email}\r\n                    label=\"Email Address\"\r\n                    type=\"email\"\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    autoFocus={false}\r\n                    onChange={(e)=>setPassword(e.target.value)}\r\n                    margin=\"dense\"\r\n                    id=\"password\"\r\n                    value={password}\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n            </Button>\r\n            <Button onClick={handleCreateNewUser} color=\"primary\">\r\n                Create\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddUser;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React,{useState, useEffect} from 'react';\r\nimport UserRow from './UserRow';\r\nimport {getUser} from './http-provider';\r\nimport AddUser from './AddUser';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst GList = () => {\r\n    \r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [usersList, setUsersList] = useState([]);\r\n    let timer;\r\n    const history = useHistory();\r\n    const loadUsers = async(filterName) => {\r\n        const users = await getUser(filterName);\r\n        return users;\r\n    }\r\n    useEffect(async ()=>{\r\n        async function fetchData() {\r\n            const users = await loadUsers(\"\");\r\n            setUsersList(users);\r\n        }\r\n        fetchData();\r\n    }, [\r\n        \r\n    ])\r\n    // loadUsers();\r\n    const handleOnChange = async (e) => {\r\n        setSearchValue(e.target.value);\r\n        if(timer) clearTimeout(timer);\r\n        timer = setTimeout( async () =>{\r\n            const users = await loadUsers(e.target.value);\r\n            setUsersList(users);\r\n        }, 1000);\r\n    }\r\n    const onItemSelected = (userId) => {\r\n        console.log(userId);\r\n        // handleNavigation();\r\n        history.push(`/detail/${userId}`, { userId: userId });\r\n    }\r\n    const handleNavigation = () => history.push('/home');\r\n\r\n    return (\r\n        <>\r\n            <h4 className = \"bg-primary text-white text-center p-4\">\r\n                Users\r\n            </h4>\r\n            <div>\r\n                <div className=\"my-1\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={searchValue}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <table className = \"table table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>User ID</th>\r\n                        <th>Email</th>\r\n                        <th>Detalle</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {usersList.map((user) => <UserRow key={user.uid} id = {user.uid} email={user.email} onItemSelected={onItemSelected}/>)}\r\n                </tbody>\r\n            </table>\r\n            <AddUser\r\n                onAdd = {async(email) => {\r\n                    console.log(email);\r\n                    const users = await loadUsers(\"\");\r\n                    setUsersList(users);\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GList;","import React from 'react';\r\nimport GList from './GList';\r\nconst Home = () => {\r\n    return <GList/>;\r\n}\r\n\r\nexport default Home;","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { Card, Container, Input, CardContent, Typography, TextField, FormControlLabel, Checkbox, Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {login} from './http-provider';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    column:{\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    textField:{\r\n        paddingBottom: '10px',\r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold'\r\n    },\r\n    fieldTitle: {\r\n        fontWeight: '600',\r\n        fontFamily : 'Arial',\r\n        paddingBottom: '15px',\r\n    },\r\n    button: {\r\n        height: '50px'\r\n    },\r\n    cardStyle: {\r\n        paddingTop: '10%'\r\n    }\r\n}));\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    const [checked, setChecked] = useState(true);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const history = useHistory();\r\n    const handleNavigation = () => history.replace('/home');\r\n\r\n    const changeEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n    const changePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n    const handleOnPressed = async () => {\r\n        if(!email.includes(\"@\")){\r\n            console.log(\"Error\");\r\n            setEmailError(true);\r\n            return;\r\n        }\r\n        if(password.length < 6){\r\n            console.log(\"Error\");\r\n            setPasswordError(true);\r\n            return;\r\n        }\r\n        const token = await login(email, password);\r\n        console.log(token);\r\n        if(token){\r\n            handleNavigation();\r\n        }else{\r\n            alert(\"Error al iniciar sesión\")\r\n        }\r\n    }\r\n    return (\r\n        <Container maxWidth=\"sm\" className={classes.cardStyle}>\r\n            <Card>\r\n                <CardContent >\r\n                    <Typography className={classes.title} variant = \"h4\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <div className={classes.column}>\r\n                            <Typography variant = \"h5\" className={classes.fieldTitle}>\r\n                                Email Address\r\n                            </Typography>\r\n                            <TextField \r\n                                type=\"email\"\r\n                                error = {emailError}\r\n                                value = {email}\r\n                                onClick = {(e) => {setEmailError(false)}}\r\n                                className={classes.textField} \r\n                                id=\"outlined-basic\" \r\n                                label=\"Email\" \r\n                                variant=\"outlined\" \r\n                                onChange = {changeEmail}\r\n                            />\r\n                            <Typography variant = \"h5\" className={classes.fieldTitle}>\r\n                                Password\r\n                            </Typography>\r\n                            <TextField \r\n                                type=\"password\"\r\n                                error = {passwordError}\r\n                                value = {password}\r\n                                className={classes.textField} \r\n                                id=\"outlined-basic\" \r\n                                label=\"Password\" \r\n                                onClick = {(e) => {setPasswordError(false)}}\r\n                                variant=\"outlined\"\r\n                                onChange = {changePassword}\r\n                            />\r\n                            <FormControlLabel\r\n                                control={\r\n                                <Checkbox\r\n                                    checked={checked}\r\n                                    onChange={() => {setChecked(!checked)}}\r\n                                    name=\"checkedB\"\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Remember me\"\r\n                            />\r\n                            <Button \r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick = {handleOnPressed}\r\n                            >\r\n                                Primary\r\n                            </Button>\r\n                            {/* <Link to=\"/home\">\r\n                                \r\n                            </Link> */}\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </CardContent> \r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;","import 'date-fns';\r\nimport React,{useEffect, useState} from 'react';\r\nimport {TextField, Grid, Button} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {getUserById, editUser} from '../http-provider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField:{\r\n        paddingBottom: '10px',\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        paddingLeft: \"10px\"\r\n    },\r\n}));\r\n\r\nconst UserDetail = (props) => {\r\n    let id  = props.location.state.userId;\r\n    const [userData, setUserData] = useState({\r\n        \"nombres\": \"\",\r\n        \"email\": \"\",\r\n        \"photoUrl\": \"\",\r\n        \"altura\": 0.0\r\n    });\r\n    // let { id } = useParams();\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n    const classes = useStyles();\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n    const editUserData = async(user, id) => {\r\n        const success = await editUser(user, id);\r\n        if(success === true){\r\n            console.log(\"Modificación exitosa\");\r\n        }else{\r\n            console.log(\"Modificación fallida\");\r\n        }\r\n    }\r\n    useEffect(async ()=>{\r\n        let id  = props.location.state.userId;\r\n        async function fetchData() {\r\n            const user = await getUserById(id);\r\n            setUserData({\r\n                \"nombres\": user.nombres || \"\",\r\n                \"email\": user.email || \"\",\r\n                \"photoUrl\": user.photoUrl || \"\",\r\n                \"altura\": user.altura || \"\"\r\n            });\r\n        }\r\n        fetchData(id);\r\n    }, [\r\n        \r\n    ])\r\n    return (\r\n        <>\r\n            <h4 className = \"bg-primary text-white text-center p-4\">\r\n                User Edit Page\r\n            </h4>\r\n            <div className={classes.root}>\r\n                <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            type=\"text\"\r\n                            className={classes.textField} \r\n                            id=\"outlined-basic\" \r\n                            label=\"Nombres\" \r\n                            value = {userData.nombres}\r\n                            variant=\"outlined\"\r\n                        />     \r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            type=\"email\"\r\n                            className={classes.textField} \r\n                            id=\"outlined-basic\" \r\n                            label=\"Email\"\r\n                            value = {userData.email}\r\n                            variant=\"outlined\"\r\n                        />    \r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            type=\"text\"\r\n                            className={classes.textField} \r\n                            id=\"outlined-basic\" \r\n                            label=\"Estatura\" \r\n                            onChange = {(e) => setUserData({...userData, altura: e.target.value})}\r\n                            value = {userData.altura}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            lang = \"es-ES\"\r\n                            variant=\"inline\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Date picker inline\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>editUserData(userData, id)}>\r\n                            Editar\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserDetail;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport UserDetail from './UserDetails/UserDetail';\r\nconst App = () => {\r\n    return (\r\n        <Router basename={window.location.pathname || ''}>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Login}/>\r\n                <Route path=\"/home\" component={Home}/>\r\n                <Route path=\"/detail/:id\" component={UserDetail}/>\r\n            </Switch>\r\n        </Router>\r\n    );    \r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />, \r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}