{"version":3,"sources":["UserRow.js","http-provider.js","GList.js","Home.js","Login.js","App.jsx","index.js"],"names":["UserRow","id","email","baseURL","getUserEndpoint","login","password","a","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","resp","console","log","text","status","getUser","filterName","parse","usuarios","GList","timer","useState","searchValue","setSearchValue","usersList","setUsersList","loadUsers","users","useEffect","fetchData","handleOnChange","e","target","value","clearTimeout","setTimeout","className","type","onChange","map","user","uid","Home","useStyles","makeStyles","theme","column","display","flexDirection","textField","paddingBottom","title","textAlign","fontWeight","fieldTitle","fontFamily","button","height","cardStyle","paddingTop","Login","classes","checked","setChecked","setEmail","setPassword","emailError","setEmailError","passwordError","setPasswordError","history","useHistory","handleOnPressed","includes","length","token","replace","alert","Container","maxWidth","Card","CardContent","Typography","variant","noValidate","autoComplete","TextField","error","onClick","label","FormControlLabel","control","Checkbox","name","color","Button","App","basename","window","location","pathname","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdfdd63b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst UserRow = ({id, email}) => (\r\n    <tr key={id}>\r\n        <td>{id}</td>\r\n        <td>{email}</td>\r\n    </tr> \r\n)\r\n\r\nexport default UserRow;","const baseURL = \"https://evolbit-api.herokuapp.com/\";\r\nconst loginEndpoint = \"api/auth/login\";\r\nconst getUserEndpoint = \"api/usuarios\";\r\n\r\nexport const login = async (email, password) => {\r\n    try{\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        \r\n        var raw = JSON.stringify({\r\n            \"email\": email,\r\n            \"password\": password\r\n        });\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n    \r\n        const resp = await fetch(baseURL + loginEndpoint, requestOptions);\r\n        console.log(resp);\r\n        const body = await resp.text();\r\n        console.log(body);\r\n        if(resp.status === 200){\r\n            return body;\r\n        }else{\r\n            return null;\r\n        }\r\n    }catch(e){\r\n        return null;\r\n    }\r\n    \r\n}\r\nexport const getUser = async(filterName = \"\") => {\r\n    try{\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n          };\r\n        \r\n          const resp = await fetch(baseURL + getUserEndpoint + \"/\" + filterName , requestOptions);\r\n          const text = await resp.text();\r\n          const {usuarios} = JSON.parse(text);\r\n          return usuarios;\r\n    }catch(e){\r\n        return [];\r\n    }\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React,{useState, useEffect} from 'react';\r\nimport UserRow from './UserRow';\r\nimport {getUser} from './http-provider';\r\n\r\nconst GList = () => {\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [usersList, setUsersList] = useState([]);\r\n    let timer;\r\n    const loadUsers = async(filterName) => {\r\n        const users = await getUser(filterName);\r\n        return users;\r\n    }\r\n    useEffect(async ()=>{\r\n        async function fetchData() {\r\n            const users = await loadUsers(\"\");\r\n            setUsersList(users);\r\n        }\r\n        fetchData();\r\n    }, [\r\n\r\n    ])\r\n    // loadUsers();\r\n    const handleOnChange = async (e) => {\r\n        setSearchValue(e.target.value);\r\n        if(timer) clearTimeout(timer);\r\n        timer = setTimeout( async () =>{\r\n            const users = await loadUsers(e.target.value);\r\n            setUsersList(users);\r\n        }, 1000);\r\n    }\r\n    return (\r\n        <>\r\n            <h4 className = \"bg-primary text-white text-center p-4\">\r\n                Task App\r\n            </h4>\r\n            <div className=\"my-1\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={searchValue}\r\n                    onChange={handleOnChange}\r\n                />\r\n            </div>\r\n            <table className = \"table table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>User ID</th>\r\n                        <th>Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {usersList.map((user) => <UserRow key={user.uid} id = {user.uid} email={user.email}/>)}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GList;","import React from 'react';\r\nimport GList from './GList';\r\nconst Home = () => {\r\n    return <GList/>;\r\n}\r\n\r\nexport default Home;","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { Card, Container, Input, CardContent, Typography, TextField, FormControlLabel, Checkbox, Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {login} from './http-provider';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    column:{\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    textField:{\r\n        paddingBottom: '10px',\r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold'\r\n    },\r\n    fieldTitle: {\r\n        fontWeight: '600',\r\n        fontFamily : 'Arial',\r\n        paddingBottom: '15px',\r\n    },\r\n    button: {\r\n        height: '50px'\r\n    },\r\n    cardStyle: {\r\n        paddingTop: '10%'\r\n    }\r\n}));\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    const [checked, setChecked] = useState(true);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const history = useHistory();\r\n    const handleNavigation = () => history.replace('/home');\r\n\r\n    const changeEmail = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n    const changePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n    const handleOnPressed = async () => {\r\n        if(!email.includes(\"@\")){\r\n            console.log(\"Error\");\r\n            setEmailError(true);\r\n            return;\r\n        }\r\n        if(password.length < 6){\r\n            console.log(\"Error\");\r\n            setPasswordError(true);\r\n            return;\r\n        }\r\n        const token = await login(email, password);\r\n        console.log(token);\r\n        if(token){\r\n            handleNavigation();\r\n        }else{\r\n            alert(\"Error al iniciar sesión\")\r\n        }\r\n    }\r\n    return (\r\n        <Container maxWidth=\"sm\" className={classes.cardStyle}>\r\n            <Card>\r\n                <CardContent >\r\n                    <Typography className={classes.title} variant = \"h4\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <div className={classes.column}>\r\n                            <Typography variant = \"h5\" className={classes.fieldTitle}>\r\n                                Email Address\r\n                            </Typography>\r\n                            <TextField \r\n                                type=\"email\"\r\n                                error = {emailError}\r\n                                value = {email}\r\n                                onClick = {(e) => {setEmailError(false)}}\r\n                                className={classes.textField} \r\n                                id=\"outlined-basic\" \r\n                                label=\"Email\" \r\n                                variant=\"outlined\" \r\n                                onChange = {changeEmail}\r\n                            />\r\n                            <Typography variant = \"h5\" className={classes.fieldTitle}>\r\n                                Password\r\n                            </Typography>\r\n                            <TextField \r\n                                type=\"password\"\r\n                                error = {passwordError}\r\n                                value = {password}\r\n                                className={classes.textField} \r\n                                id=\"outlined-basic\" \r\n                                label=\"Password\" \r\n                                onClick = {(e) => {setPasswordError(false)}}\r\n                                variant=\"outlined\"\r\n                                onChange = {changePassword}\r\n                            />\r\n                            <FormControlLabel\r\n                                control={\r\n                                <Checkbox\r\n                                    checked={checked}\r\n                                    onChange={() => {setChecked(!checked)}}\r\n                                    name=\"checkedB\"\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Remember me\"\r\n                            />\r\n                            <Button \r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick = {handleOnPressed}\r\n                            >\r\n                                Primary\r\n                            </Button>\r\n                            {/* <Link to=\"/home\">\r\n                                \r\n                            </Link> */}\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </CardContent> \r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nconst App = () => {\r\n    return (\r\n        <Router basename={window.location.pathname || ''}>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Login}/>\r\n                <Route path=\"/home\" component={Home}/>\r\n            </Switch>\r\n        </Router>\r\n    );    \r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />, \r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}